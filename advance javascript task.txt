REST OPERATORS
jb hum function ko call krty wakt bht sara data pass krty hai wo function chalty wakt 
parametors mai ya data utha ta hai or hum (...others) kr k baki sara data others mai ajata ha.
const function (a,b,c , ...others){

}


fucntion(1,2,3,4,5,6,6,7)

SPREAD OPERATORS
jb hum function call krty ha us wakt agr humy us ko array pass krna ha or wo array mai bht data hai to hum (...array)
kry gy to sara data us function mai chala jaye ga

array = [1,3,4,5,6,7,8,9,6]
function(...array)

CALL BACK
call back hum log is liye use krty hai q k jb humy 2 function ek sat chalany hongy settiome out mai
to get data ka function 1 mint mai chaly ga or create data a 3 seconds k bd to jb hum 3rd data create kary gy to wo get nhe ohga.
q k get data 1 second mai chal raha jis sy page reload refresh hojata ha or 3sra data create nhe hota.

NEW PROMISES 
YA 2 paramators pass krta ha reject resolve jb b koi masla nhe hota to resolve chalta hai or jb b
koi masla ata ha to reject section chalta ha .
createfuction ().then(getdata).catch(err=>console.log(err))

ASYNC AWAIT 
main function ko async lagai gy or jis function ka wait krna ha us ko await lagai gy.

async function start(){
await createdata()
getdata()
}


CLOSURES

var sum = function(a){
console.log(a)

return function(c){
return a+b+c
}

const store= sum(2)

console.log(store(2))

closure function k andr function bana k return krna closures hota hai or main function k variber ko
inner function b access kr sakta ha is ko lexcical scope kehty hai.
is function ko hum har bar ek value mai function ko store kar k value pass krty hai.


var sum = function(a,b,c){

getsumtwo=function(){
return a+b
}

getsumthree=function(){
return a+b+c
}

}
 
const store= sum(2,3,4)
console.log(store.getsumtwo())
console.log(store.getsumthree())
closures mai inner function ko access krny k liye zaroori hai k ap outerfunction ko ek varible mai store karo
const store =sum(2,3,4)

CALL 
jb b hum 2 obj banaty hai or hum chaty hai k dosry obj ka data b humary pas ajaye to hum obj k and fuc banaty hai or us ka this utha ty hai.
to dono ibj ka data ajata hai

dataobj.prindetail.call(dataobj1)
dataobj k andr print detail ka function hai or us k andr console liya ha this sy sara data ajata.

hum printdetail ka function global b bana sakty ha

let printdetail = function(state){
console.log(this.name+state)
}
printdetail.call(userdata2,"ahmed","safdar")

APPLY
call or apply mai difference ya ha k call mai data parameter mai pass krty hai or apply mai
array mai pass hota ha.
printdetail.apply(userdata2,["ahmed","safdar"])

BIND
bind function same call ki tara kaam krta hai lekin is mai ek vairble mai store krna parhta ha like
let newfunc = printdetail.bind(userdetail,"ahmed","safdar")


PROTOTYPE

const obj = {
name:"safdar",
}
console.log(obj)

const obj2 = {
roll:21,
__proto__:obj
}

console.log(obj2)
